# boot.scr
#
# Boot script for Beagle Hybrid / Panda Hybrid / GTA04
#
# Author: H. Nikolaus Schaller
# Copyright Golden Delicious Computers 2010-2011
# licensed under GPL 2.0
#
#
# NAND Flash addresses (@ 256 MByte/2 GBit)
#
# 0x0000 0000	0x0007 ffff		512 KB	X-Loader (flash image) - note the loader must fit into 64k SRAM!
# 0x0008 0000	0x001c ffff		1.3 MB	U-Boot (flash image)
# 0x001d 0000	0x0020 ffff		256 KB	splash.rgb16z
# 0x0021 0000	0x0024 ffff		256 KB	menu.rgb16z
# 0x0025 0000	0x0025 ffff		64 KB	boot.scr
# 0x0026 0000	0x0027 ffff		128 KB	U-Boot parameters written by saveenv
# 0x0028 0000	0x0067 ffff		4 MB	Kernel (flash image loaded by nandboot)
# 0x0068 0000	0x0fff ffff		250 MB	file system (jffs) etc.
#
# To flash into NAND from command line:
#
# 1. break into U-Boot command line
# 2. flash=yes
# 3. run bootcmd
#

VERSION=003	# increment if we need to re-initialize the boot environment

status init
status set 8	# give fast feedback that U-Boot did start (red power led)

echo **************************** RADEK ***********************

echo *** initializing LCM ***
lcm start
		echo *** initializing TSC for boot menu ***
		tsc init
		while true
		do
			if test "x${flash}" != "xyes"
			then
				echo *** loading boot menu image ***
				setenv imgaddr 80600000
				setenv imgfile menu
				setenv imgnandaddr 210000
				run loadimg

				tsc choose 2 3	# 2 columns 3 rows -> value 1 .. 6
				
				# restore boot image
				setenv imgaddr 80400000
				setenv imgfile splash
				setenv imgnandaddr 1d0000
				run loadimg

			fi
			
			if tsc selection 1
			then
				echo *** LED mirror ***
				status mirror
			elif tsc selection 2
			then
				echo *** LED blink ***
				systest all
			elif tsc selection 3
			then 
				echo *** LCD boot ***
				setenv defaultdisplay lcd
				i2c dev 0
				setenv loadaddr 0x82000000
				if fatload mmc 0 0x82000000 uImage
				then
					run mmcboot
				else
					run nandboot
				fi
			elif tsc selection 4
			then
				echo *** DVI boot ***

				setenv bootdelay 10
				setenv defaultdisplay dvi
				setenv dvimode 1024x768MR-16@60
				status set 10
				i2c dev 0
				setenv loadaddr 0x82000000
				if fatload mmc 0 0x82000000 uImage
				then
					lcm backlight 0
					lcm off
					lcm power 0
					run mmcboot
				else
					lcm backlight 0
					lcm off
					lcm power 0
					run nandboot
				fi
			elif tsc selection 5
			then 
				echo *** NAND boot ***
				run nandboot
			elif tsc selection 6
			then 
				echo *** - ***
				while true
				do
				setenv imgfile img1
				run loadimg
				sleep 3
				setenv imgfile img2
				run loadimg
				sleep 3
				setenv imgfile img3
				run loadimg
				sleep 3
				setenv imgfile img4
				run loadimg
				sleep 3
				setenv imgfile img5
				run loadimg
				sleep 3
				done
			elif tsc selection 7
			then 
				;
			elif test "x${flash}" = "xyes" || tsc selection 8
			then 
				echo *** NAND flash ***
				# FIXME: MLO is configured to load U-Boot from MMC
				# while X-Loader is loading U-Boot from NAND
				# so we should install x-load.flash - if available
				# or the device would still need a MMC to boot

				status set 1
				i2c dev 0
				if fatload mmc 0 0x80200000 x-load.flash
				then
					echo *** flashing Xloader ***
#					nand unlock
					nandecc hw
					# write some copies
					nand erase 0 80000
					nand write 0x80200000 0 20000
					nand write 0x80200000 20000 20000
					nand write 0x80200000 40000 20000
					nand write 0x80200000 60000 20000
				fi
				
				status set 2
				# the official u-boot partition goes from 0x80000 to 0x27ffff i.e. 2 MByte
				
				if fatload mmc 0 0x80300000 u-boot.bin
				then
					echo *** flashing U-Boot ***
					nandecc sw
					nand erase 80000 160000
					nand write 0x80300000 80000 1e0000
					echo *** erase environment ***
					nand erase 260000 20000
				fi

				# read&write compressed splash image to nand
				# there is just room for 614 kByte
				# since u-boot is approx 260 kByte

				if fatload mmc 0 0x80300000 splash.rgb16z
					then
					echo *** flashing splash ***
					nandecc sw
					nand write 0x80300000 1d0000 40000
				fi

				if fatload mmc 0 0x80300000 menu.rgb16z
					then
					echo *** flashing menu ***
					nandecc sw
					nand write 0x80300000 210000 40000
				fi

				if fatload mmc 0 0x80300000 boot.scr
					then
					echo *** flashing boot.scr ***
					nandecc sw
					nand write 0x80300000 250000 10000
				fi

				status set 3
				if fatload mmc 0 0x80300000 uImage
				then
					echo *** flashing Kernel (max. 4 MByte) ***
					nandecc sw
					nand erase 280000 400000
					nand write 0x80300000 280000 400000
				fi
				
				# can we flash a rootfs from MMC?
				# probably no
				# we would need jffs2 and tar/cp -R support

				status set 8
				flash=no	# don't flash again
				
				echo
				echo ******************************
				echo *** Flashing Done          ***
				echo *** Device will switch off ***
				echo ******************************
				echo
				halt
				# 
			else
				echo *** Could not decode ***
				status blink
			fi
		done
	else
		echo *** booting Linux ***
		setenv defaultdisplay lcd
		status set 18	# orange
#		lcm backlight 0	# switch off before booting (?)
		printenv
		i2c dev 0
		setenv loadaddr 0x82000000
		if fatload mmc 0 0x82000000 uImage
		then
			lcm power 0
			lcm off	# avoid wash-out
			status set 10	# green
			run mmcboot
		elif ext2load mmc 0 0x82000000 /boot/uImage
		then
			lcm power 0
			lcm off	# avoid wash-out
			status set 10	# green
			run mmcboot
		else
			lcm power 0
			lcm off	# avoid wash-out
			status set 10	# green
			run nandboot

echo *** Could not run ***
status blink
