/*
 * This file was generated by qfsodbusxml2cpp version 0.7
 * Command line was: qfsodbusxml2cpp -p qfsodeviceambientlight -c QFsoDeviceAmbientLight specs/xml/org.freesmartphone.Device.AmbientLight.xml
 *
 * qfsodbusxml2cpp is Copyright (C) 2009 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef QFSODEVICEAMBIENTLIGHT_H
#define QFSODEVICEAMBIENTLIGHT_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface org.freesmartphone.Device.AmbientLight
 */
class QFsoDeviceAmbientLight: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.freesmartphone.Device.AmbientLight"; }

public:
    QFsoDeviceAmbientLight(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~QFsoDeviceAmbientLight();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<int, int> GetAmbientLightBrightness()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("GetAmbientLightBrightness"), argumentList);
    }
    inline QDBusReply<int> GetAmbientLightBrightness(int &epoch)
    {
        QList<QVariant> argumentList;
        QDBusMessage reply = callWithArgumentList(QDBus::Block, QLatin1String("GetAmbientLightBrightness"), argumentList);
        if (reply.type() == QDBusMessage::ReplyMessage && reply.arguments().count() == 2) {
            epoch = qdbus_cast<int>(reply.arguments().at(1));
        }
        return reply;
    }

Q_SIGNALS: // SIGNALS
    void AmbientLightBrightness(int brightness);
};

namespace org {
  namespace freesmartphone {
    namespace Device {
      typedef ::QFsoDeviceAmbientLight AmbientLight;
    }
  }
}
#endif
