/*
 * This file was generated by qfsodbusxml2cpp version 0.7
 * Command line was: qfsodbusxml2cpp -p qfsomusicplayerplaylist -c QFsoMusicPlayerPlaylist specs/xml/org.freesmartphone.MusicPlayer.Playlist.xml
 *
 * qfsodbusxml2cpp is Copyright (C) 2009 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef QFSOMUSICPLAYERPLAYLIST_H_1306329414
#define QFSOMUSICPLAYERPLAYLIST_H_1306329414

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface org.freesmartphone.MusicPlayer.Playlist
 */
class QFsoMusicPlayerPlaylist: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.freesmartphone.MusicPlayer.Playlist"; }

public:
    QFsoMusicPlayerPlaylist(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~QFsoMusicPlayerPlaylist();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<int> Add(const QString &file)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(file);
        return asyncCallWithArgumentList(QLatin1String("Add"), argumentList);
    }

    inline QDBusPendingReply<> ChangeName(const QString &new_name)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(new_name);
        return asyncCallWithArgumentList(QLatin1String("ChangeName"), argumentList);
    }

    inline QDBusPendingReply<QString> GetAtPosition(int position)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(position);
        return asyncCallWithArgumentList(QLatin1String("GetAtPosition"), argumentList);
    }

    inline QDBusPendingReply<QStringList> GetFiles()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("GetFiles"), argumentList);
    }

    inline QDBusPendingReply<QString> GetMode()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("GetMode"), argumentList);
    }

    inline QDBusPendingReply<QString> GetName()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("GetName"), argumentList);
    }

    inline QDBusPendingReply<> Insert(int position, const QString &file)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(position) << qVariantFromValue(file);
        return asyncCallWithArgumentList(QLatin1String("Insert"), argumentList);
    }

    inline QDBusPendingReply<> InsertDir(int position, const QString &file, bool recursive)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(position) << qVariantFromValue(file) << qVariantFromValue(recursive);
        return asyncCallWithArgumentList(QLatin1String("InsertDir"), argumentList);
    }

    inline QDBusPendingReply<> JumpTo(int position)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(position);
        return asyncCallWithArgumentList(QLatin1String("JumpTo"), argumentList);
    }

    inline QDBusPendingReply<> LoadFromUri(const QString &file)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(file);
        return asyncCallWithArgumentList(QLatin1String("LoadFromUri"), argumentList);
    }

    inline QDBusPendingReply<> Remove(int position)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(position);
        return asyncCallWithArgumentList(QLatin1String("Remove"), argumentList);
    }

    inline QDBusPendingReply<> SetMode(const QString &mode)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(mode);
        return asyncCallWithArgumentList(QLatin1String("SetMode"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void Deleted();
    void FileAdded(int position, const QString &file);
    void FileRemoved(int postion);
    void ModeChanged(const QString &mode);
    void Name(const QString &name);
    void Playing(const QString &file);
};

namespace org {
  namespace freesmartphone {
    namespace MusicPlayer {
      typedef ::QFsoMusicPlayerPlaylist Playlist;
    }
  }
}
#endif
