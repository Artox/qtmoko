/*
 * This file was generated by qfsodbusxml2cpp version 0.7
 * Command line was: qfsodbusxml2cpp -p qfsopimcalls -c QFsoPIMCalls specs/xml/org.freesmartphone.PIM.Calls.xml
 *
 * qfsodbusxml2cpp is Copyright (C) 2009 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef QFSOPIMCALLS_H
#define QFSOPIMCALLS_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface org.freesmartphone.PIM.Calls
 */
class QFsoPIMCalls: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.freesmartphone.PIM.Calls"; }

public:
    QFsoPIMCalls(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~QFsoPIMCalls();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<QString> Add(const QVariantMap &call_data)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(call_data);
        return asyncCallWithArgumentList(QLatin1String("Add"), argumentList);
    }

    inline QDBusPendingReply<int> GetNewMissedCalls()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("GetNewMissedCalls"), argumentList);
    }

    inline QDBusPendingReply<QString> GetSingleEntrySingleField(const QVariantMap &query, const QString &field)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(query) << qVariantFromValue(field);
        return asyncCallWithArgumentList(QLatin1String("GetSingleEntrySingleField"), argumentList);
    }

    inline QDBusPendingReply<QString> Query(const QVariantMap &query)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(query);
        return asyncCallWithArgumentList(QLatin1String("Query"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void IncomingCall(const QString &call_path);
    void NewCall(const QString &call_path);
    void NewMissedCalls(int amount);
};

namespace org {
  namespace freesmartphone {
    namespace PIM {
      typedef ::QFsoPIMCalls Calls;
    }
  }
}
#endif
