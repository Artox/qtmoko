/*
 * This file was generated by qfsodbusxml2cpp version 0.7
 * Command line was: qfsodbusxml2cpp -p qfsoapplicationmanager -c QFsoApplicationManager specs/xml/org.freesmartphone.Application.Manager.xml
 *
 * qfsodbusxml2cpp is Copyright (C) 2009 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef QFSOAPPLICATIONMANAGER_H
#define QFSOAPPLICATIONMANAGER_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

#if defined(QFSO_LIBRARY)
    #define QFSO_EXPORT Q_DECL_EXPORT
#else
    #define QFSO_EXPORT Q_DECL_IMPORT
#endif

/*
 * Proxy class for interface org.freesmartphone.Application.Manager
 */
class QFSO_EXPORT QFsoApplicationManager: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.freesmartphone.Application.Manager"; }

public:
    QFsoApplicationManager(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~QFsoApplicationManager();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> RegisterSession(const QString &appname)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(appname);
        return asyncCallWithArgumentList(QLatin1String("RegisterSession"), argumentList);
    }

    inline QDBusPendingReply<> ReleaseSession()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("ReleaseSession"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

namespace org {
  namespace freesmartphone {
    namespace Application {
      typedef ::QFsoApplicationManager Manager;
    }
  }
}
#endif
