/*
 * This file was generated by qofonodbusxml2cpp version 0.7
 * Command line was: qofonodbusxml2cpp -p qofono -c Qofono ./ofono.xml
 *
 * qofonodbusxml2cpp is Copyright (C) 2009 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef QOFONO_H
#define QOFONO_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>
#include <qofonodbusabstractinterface.h>
#include "qofonoobject.h"

#if defined(QOFONO_LIBRARY)
    #define QOFONO_EXPORT Q_DECL_EXPORT
#else
    #define QOFONO_EXPORT Q_DECL_IMPORT
#endif

/*
 * Proxy class for interface org.freedesktop.DBus.Introspectable
 */
class QOFONO_EXPORT Qofono: public QOFonoDbusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.freedesktop.DBus.Introspectable"; }

public:
    Qofono(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~Qofono();

public Q_SLOTS: // METHODS
    inline QOFonoDBusPendingReply<QString> Introspect()
    {
        QList<QVariant> argumentList;
        return ofonoAsyncCall(QLatin1String("Introspect"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

/*
 * Proxy class for interface org.ofono.CellBroadcast
 */
class QOFONO_EXPORT Qofono: public QOFonoDbusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.ofono.CellBroadcast"; }

public:
    Qofono(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~Qofono();

public Q_SLOTS: // METHODS
    inline QOFonoDBusPendingReply<QVariantMap> GetProperties()
    {
        QList<QVariant> argumentList;
        return ofonoAsyncCall(QLatin1String("GetProperties"), argumentList);
    }

    inline QOFonoDBusPendingReply<> SetProperty(const QString &in0, const QDBusVariant &in1)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(in0) << qVariantFromValue(in1);
        return ofonoAsyncCall(QLatin1String("SetProperty"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void EmergencyBroadcast(const QString &in0, const QVariantMap &in1);
    void IncomingBroadcast(const QString &in0, ushort in1);
    void PropertyChanged(const QString &in0, const QDBusVariant &in1);
};

/*
 * Proxy class for interface org.ofono.ConnectionManager
 */
class QOFONO_EXPORT Qofono: public QOFonoDbusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.ofono.ConnectionManager"; }

public:
    Qofono(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~Qofono();

public Q_SLOTS: // METHODS
    inline QOFonoDBusPendingReply<QDBusObjectPath> AddContext(const QString &in0)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(in0);
        return ofonoAsyncCall(QLatin1String("AddContext"), argumentList);
    }

    inline QOFonoDBusPendingReply<> DeactivateAll()
    {
        QList<QVariant> argumentList;
        return ofonoAsyncCall(QLatin1String("DeactivateAll"), argumentList);
    }

    inline QOFonoDBusPendingReply<QOFonoObjectList> GetContexts()
    {
        QList<QVariant> argumentList;
        return ofonoAsyncCall(QLatin1String("GetContexts"), argumentList);
    }

    inline QOFonoDBusPendingReply<QVariantMap> GetProperties()
    {
        QList<QVariant> argumentList;
        return ofonoAsyncCall(QLatin1String("GetProperties"), argumentList);
    }

    inline QOFonoDBusPendingReply<> RemoveContext(const QDBusObjectPath &in0)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(in0);
        return ofonoAsyncCall(QLatin1String("RemoveContext"), argumentList);
    }

    inline QOFonoDBusPendingReply<> SetProperty(const QString &in0, const QDBusVariant &in1)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(in0) << qVariantFromValue(in1);
        return ofonoAsyncCall(QLatin1String("SetProperty"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void ContextAdded(const QDBusObjectPath &in0, const QVariantMap &in1);
    void ContextRemoved(const QDBusObjectPath &in0);
    void PropertyChanged(const QString &in0, const QDBusVariant &in1);
};

/*
 * Proxy class for interface org.ofono.MessageManager
 */
class QOFONO_EXPORT Qofono: public QOFonoDbusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.ofono.MessageManager"; }

public:
    Qofono(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~Qofono();

public Q_SLOTS: // METHODS
    inline QOFonoDBusPendingReply<QOFonoObjectList> GetMessages()
    {
        QList<QVariant> argumentList;
        return ofonoAsyncCall(QLatin1String("GetMessages"), argumentList);
    }

    inline QOFonoDBusPendingReply<QVariantMap> GetProperties()
    {
        QList<QVariant> argumentList;
        return ofonoAsyncCall(QLatin1String("GetProperties"), argumentList);
    }

    inline QOFonoDBusPendingReply<QDBusObjectPath> SendMessage(const QString &in0, const QString &in1)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(in0) << qVariantFromValue(in1);
        return ofonoAsyncCall(QLatin1String("SendMessage"), argumentList);
    }

    inline QOFonoDBusPendingReply<> SetProperty(const QString &in0, const QDBusVariant &in1)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(in0) << qVariantFromValue(in1);
        return ofonoAsyncCall(QLatin1String("SetProperty"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void ImmediateMessage(const QString &in0, const QVariantMap &in1);
    void IncomingMessage(const QString &in0, const QVariantMap &in1);
    void MessageAdded(const QDBusObjectPath &in0, const QVariantMap &in1);
    void MessageRemoved(const QDBusObjectPath &in0);
    void PropertyChanged(const QString &in0, const QDBusVariant &in1);
};

/*
 * Proxy class for interface org.ofono.Modem
 */
class QOFONO_EXPORT Qofono: public QOFonoDbusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.ofono.Modem"; }

public:
    Qofono(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~Qofono();

public Q_SLOTS: // METHODS
    inline QOFonoDBusPendingReply<QVariantMap> GetProperties()
    {
        QList<QVariant> argumentList;
        return ofonoAsyncCall(QLatin1String("GetProperties"), argumentList);
    }

    inline QOFonoDBusPendingReply<> SetProperty(const QString &in0, const QDBusVariant &in1)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(in0) << qVariantFromValue(in1);
        return ofonoAsyncCall(QLatin1String("SetProperty"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void PropertyChanged(const QString &in0, const QDBusVariant &in1);
};

/*
 * Proxy class for interface org.ofono.NetworkRegistration
 */
class QOFONO_EXPORT Qofono: public QOFonoDbusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.ofono.NetworkRegistration"; }

public:
    Qofono(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~Qofono();

public Q_SLOTS: // METHODS
    inline QOFonoDBusPendingReply<QOFonoObjectList> GetOperators()
    {
        QList<QVariant> argumentList;
        return ofonoAsyncCall(QLatin1String("GetOperators"), argumentList);
    }

    inline QOFonoDBusPendingReply<QVariantMap> GetProperties()
    {
        QList<QVariant> argumentList;
        return ofonoAsyncCall(QLatin1String("GetProperties"), argumentList);
    }

    inline QOFonoDBusPendingReply<> Register()
    {
        QList<QVariant> argumentList;
        return ofonoAsyncCall(QLatin1String("Register"), argumentList);
    }

    inline QOFonoDBusPendingReply<QOFonoObjectList> Scan()
    {
        QList<QVariant> argumentList;
        return ofonoAsyncCall(QLatin1String("Scan"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void PropertyChanged(const QString &in0, const QDBusVariant &in1);
};

/*
 * Proxy class for interface org.ofono.Phonebook
 */
class QOFONO_EXPORT Qofono: public QOFonoDbusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.ofono.Phonebook"; }

public:
    Qofono(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~Qofono();

public Q_SLOTS: // METHODS
    inline QOFonoDBusPendingReply<QString> Import()
    {
        QList<QVariant> argumentList;
        return ofonoAsyncCall(QLatin1String("Import"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

/*
 * Proxy class for interface org.ofono.PushNotification
 */
class QOFONO_EXPORT Qofono: public QOFonoDbusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.ofono.PushNotification"; }

public:
    Qofono(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~Qofono();

public Q_SLOTS: // METHODS
    inline QOFonoDBusPendingReply<> RegisterAgent(const QDBusObjectPath &in0)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(in0);
        return ofonoAsyncCall(QLatin1String("RegisterAgent"), argumentList);
    }

    inline QOFonoDBusPendingReply<> UnregisterAgent(const QDBusObjectPath &in0)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(in0);
        return ofonoAsyncCall(QLatin1String("UnregisterAgent"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

/*
 * Proxy class for interface org.ofono.RadioSettings
 */
class QOFONO_EXPORT Qofono: public QOFonoDbusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.ofono.RadioSettings"; }

public:
    Qofono(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~Qofono();

public Q_SLOTS: // METHODS
    inline QOFonoDBusPendingReply<QVariantMap> GetProperties()
    {
        QList<QVariant> argumentList;
        return ofonoAsyncCall(QLatin1String("GetProperties"), argumentList);
    }

    inline QOFonoDBusPendingReply<> SetProperty(const QString &in0, const QDBusVariant &in1)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(in0) << qVariantFromValue(in1);
        return ofonoAsyncCall(QLatin1String("SetProperty"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void PropertyChanged(const QString &in0, const QDBusVariant &in1);
};

/*
 * Proxy class for interface org.ofono.SimManager
 */
class QOFONO_EXPORT Qofono: public QOFonoDbusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.ofono.SimManager"; }

public:
    Qofono(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~Qofono();

public Q_SLOTS: // METHODS
    inline QOFonoDBusPendingReply<> ChangePin(const QString &in0, const QString &in1, const QString &in2)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(in0) << qVariantFromValue(in1) << qVariantFromValue(in2);
        return ofonoAsyncCall(QLatin1String("ChangePin"), argumentList);
    }

    inline QOFonoDBusPendingReply<> EnterPin(const QString &in0, const QString &in1)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(in0) << qVariantFromValue(in1);
        return ofonoAsyncCall(QLatin1String("EnterPin"), argumentList);
    }

    inline QOFonoDBusPendingReply<QByteArray> GetIcon(uchar in0)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(in0);
        return ofonoAsyncCall(QLatin1String("GetIcon"), argumentList);
    }

    inline QOFonoDBusPendingReply<QVariantMap> GetProperties()
    {
        QList<QVariant> argumentList;
        return ofonoAsyncCall(QLatin1String("GetProperties"), argumentList);
    }

    inline QOFonoDBusPendingReply<> LockPin(const QString &in0, const QString &in1)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(in0) << qVariantFromValue(in1);
        return ofonoAsyncCall(QLatin1String("LockPin"), argumentList);
    }

    inline QOFonoDBusPendingReply<> ResetPin(const QString &in0, const QString &in1, const QString &in2)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(in0) << qVariantFromValue(in1) << qVariantFromValue(in2);
        return ofonoAsyncCall(QLatin1String("ResetPin"), argumentList);
    }

    inline QOFonoDBusPendingReply<> SetProperty(const QString &in0, const QDBusVariant &in1)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(in0) << qVariantFromValue(in1);
        return ofonoAsyncCall(QLatin1String("SetProperty"), argumentList);
    }

    inline QOFonoDBusPendingReply<> UnlockPin(const QString &in0, const QString &in1)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(in0) << qVariantFromValue(in1);
        return ofonoAsyncCall(QLatin1String("UnlockPin"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void PropertyChanged(const QString &in0, const QDBusVariant &in1);
};

/*
 * Proxy class for interface org.ofono.SmartMessaging
 */
class QOFONO_EXPORT Qofono: public QOFonoDbusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.ofono.SmartMessaging"; }

public:
    Qofono(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~Qofono();

public Q_SLOTS: // METHODS
    inline QOFonoDBusPendingReply<> RegisterAgent(const QDBusObjectPath &in0)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(in0);
        return ofonoAsyncCall(QLatin1String("RegisterAgent"), argumentList);
    }

    inline QOFonoDBusPendingReply<QDBusObjectPath> SendAppointment(const QString &in0, const QByteArray &in1)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(in0) << qVariantFromValue(in1);
        return ofonoAsyncCall(QLatin1String("SendAppointment"), argumentList);
    }

    inline QOFonoDBusPendingReply<QDBusObjectPath> SendBusinessCard(const QString &in0, const QByteArray &in1)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(in0) << qVariantFromValue(in1);
        return ofonoAsyncCall(QLatin1String("SendBusinessCard"), argumentList);
    }

    inline QOFonoDBusPendingReply<> UnregisterAgent(const QDBusObjectPath &in0)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(in0);
        return ofonoAsyncCall(QLatin1String("UnregisterAgent"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

/*
 * Proxy class for interface org.ofono.SupplementaryServices
 */
class QOFONO_EXPORT Qofono: public QOFonoDbusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.ofono.SupplementaryServices"; }

public:
    Qofono(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~Qofono();

public Q_SLOTS: // METHODS
    inline QOFonoDBusPendingReply<> Cancel()
    {
        QList<QVariant> argumentList;
        return ofonoAsyncCall(QLatin1String("Cancel"), argumentList);
    }

    inline QOFonoDBusPendingReply<QVariantMap> GetProperties()
    {
        QList<QVariant> argumentList;
        return ofonoAsyncCall(QLatin1String("GetProperties"), argumentList);
    }

    inline QOFonoDBusPendingReply<QString, QDBusVariant> Initiate(const QString &in0)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(in0);
        return ofonoAsyncCall(QLatin1String("Initiate"), argumentList);
    }
    inline QDBusReply<QString> Initiate(const QString &in0, QDBusVariant &out1)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(in0);
        QDBusMessage reply = callWithArgumentList(QDBus::Block, QLatin1String("Initiate"), argumentList);
        if (reply.type() == QDBusMessage::ReplyMessage && reply.arguments().count() == 2) {
            out1 = qdbus_cast<QDBusVariant>(reply.arguments().at(1));
        }
        return reply;
    }

    inline QOFonoDBusPendingReply<QString> Respond(const QString &in0)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(in0);
        return ofonoAsyncCall(QLatin1String("Respond"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void NotificationReceived(const QString &in0);
    void PropertyChanged(const QString &in0, const QDBusVariant &in1);
    void RequestReceived(const QString &in0);
};

/*
 * Proxy class for interface org.ofono.VoiceCallManager
 */
class QOFONO_EXPORT Qofono: public QOFonoDbusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.ofono.VoiceCallManager"; }

public:
    Qofono(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~Qofono();

public Q_SLOTS: // METHODS
    inline QOFonoDBusPendingReply<QList<QDBusObjectPath> > CreateMultiparty()
    {
        QList<QVariant> argumentList;
        return ofonoAsyncCall(QLatin1String("CreateMultiparty"), argumentList);
    }

    inline QOFonoDBusPendingReply<QDBusObjectPath> Dial(const QString &in0, const QString &in1)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(in0) << qVariantFromValue(in1);
        return ofonoAsyncCall(QLatin1String("Dial"), argumentList);
    }

    inline QOFonoDBusPendingReply<QOFonoObjectList> GetCalls()
    {
        QList<QVariant> argumentList;
        return ofonoAsyncCall(QLatin1String("GetCalls"), argumentList);
    }

    inline QOFonoDBusPendingReply<QVariantMap> GetProperties()
    {
        QList<QVariant> argumentList;
        return ofonoAsyncCall(QLatin1String("GetProperties"), argumentList);
    }

    inline QOFonoDBusPendingReply<> HangupAll()
    {
        QList<QVariant> argumentList;
        return ofonoAsyncCall(QLatin1String("HangupAll"), argumentList);
    }

    inline QOFonoDBusPendingReply<> HangupMultiparty()
    {
        QList<QVariant> argumentList;
        return ofonoAsyncCall(QLatin1String("HangupMultiparty"), argumentList);
    }

    inline QOFonoDBusPendingReply<> HoldAndAnswer()
    {
        QList<QVariant> argumentList;
        return ofonoAsyncCall(QLatin1String("HoldAndAnswer"), argumentList);
    }

    inline QOFonoDBusPendingReply<QList<QDBusObjectPath> > PrivateChat(const QDBusObjectPath &in0)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(in0);
        return ofonoAsyncCall(QLatin1String("PrivateChat"), argumentList);
    }

    inline QOFonoDBusPendingReply<> ReleaseAndAnswer()
    {
        QList<QVariant> argumentList;
        return ofonoAsyncCall(QLatin1String("ReleaseAndAnswer"), argumentList);
    }

    inline QOFonoDBusPendingReply<> SendTones(const QString &in0)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(in0);
        return ofonoAsyncCall(QLatin1String("SendTones"), argumentList);
    }

    inline QOFonoDBusPendingReply<> SwapCalls()
    {
        QList<QVariant> argumentList;
        return ofonoAsyncCall(QLatin1String("SwapCalls"), argumentList);
    }

    inline QOFonoDBusPendingReply<> Transfer()
    {
        QList<QVariant> argumentList;
        return ofonoAsyncCall(QLatin1String("Transfer"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void BarringActive(const QString &in0);
    void CallAdded(const QDBusObjectPath &in0, const QVariantMap &in1);
    void CallRemoved(const QDBusObjectPath &in0);
    void Forwarded(const QString &in0);
    void PropertyChanged(const QString &in0, const QDBusVariant &in1);
};

namespace org {
  namespace freedesktop {
    namespace DBus {
      typedef ::Qofono Introspectable;
    }
  }
  namespace ofono {
    typedef ::Qofono CellBroadcast;
    typedef ::Qofono ConnectionManager;
    typedef ::Qofono MessageManager;
    typedef ::Qofono Modem;
    typedef ::Qofono NetworkRegistration;
    typedef ::Qofono Phonebook;
    typedef ::Qofono PushNotification;
    typedef ::Qofono RadioSettings;
    typedef ::Qofono SimManager;
    typedef ::Qofono SmartMessaging;
    typedef ::Qofono SupplementaryServices;
    typedef ::Qofono VoiceCallManager;
  }
}
#endif
